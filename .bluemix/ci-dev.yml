---
stages:
- name: Versions
  inputs:
  - service: ${GIT_REPO}
    type: git
    branch: '{{form.pipeline.parameters.INPUT_GIT_BRANCH}}'
    dir_name: null
  triggers:
  - type: git
    events: '{"push":false,"pull_request":true,"pull_request_closed":false}'
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: 'Pull'
    type: builder
    curatedDockerImage: default
    artifact_dir: ''
    build_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      
      ibm-bifrost versions --pull "$VERSIONS_GIT_BRANCH"
      mv .git git
      
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}
- name: Plan
  inputs:
  - type: job
    stage: Versions
    job: 'Pull'
    dir_name: null
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: 'Build'
    type: builder
    curatedDockerImage: default
    artifact_dir: ''
    build_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      export REGION=$(echo $REGISTRY_REGION_ID | cut -f3 -d:)
      
      ibm-bifrost login --public-cloud
      mv git .git
      ibm-bifrost plan -d "${DESTINATION}" diff -pr
      mv .git git
      
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}
- name: Unit tests
  inputs:
  - type: job
    stage: Plan
    job: Build
    dir_name: null
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: Docker Lint
    type: tester
    curatedDockerImage: default
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      export REGION=$(echo $REGISTRY_REGION_ID | cut -f3 -d:)
      export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
      export HOME=${IBMCLOUD_HOME}
      export MAVEN_OPTS="-Xmx2g"
      
      ibm-bifrost login --public-cloud
      ibm-bifrost docker --lint
    test_type: customimage
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}
  - name: Deploy Lint
    type: tester
    curatedDockerImage: default
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      export REGION=$(echo $REGISTRY_REGION_ID | cut -f3 -d:)
      export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
      export HOME=${IBMCLOUD_HOME}
      export MAVEN_OPTS="-Xmx2g"
            
      ibm-bifrost deploy --lint
    test_type: customimage
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}
  - name: Test Code
    type: builder
    curatedDockerImage: default
    artifact_dir: ''
    build_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      export REGION=$(echo $REGISTRY_REGION_ID | cut -f3 -d:)
      export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
      export HOME=${IBMCLOUD_HOME}
      export MAVEN_OPTS="-Xmx2g"
      
      ibm-bifrost login --public-cloud
      ibm-bifrost code --lint
      ibm-bifrost code --test
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}
- name: 'Sonar Qube'
  inputs:
  - type: job
    stage: Unit tests
    job: 'Test Code'
    dir_name: null
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: 'Validate'
    type: tester
    curatedDockerImage: default
    test_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      export REGION=$(echo $REGISTRY_REGION_ID | cut -f3 -d:)
      export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
      export M2_HOME=/usr/share/maven/
      mv git .git
      
      ibm-bifrost login --public-cloud
      ibm-bifrost sonar --scan

    namespace: 'NULL'      
    docker_image: ${DOCKER_IMAGE_NAME}
hooks:
- enabled: true
  label: null
  ssl_enabled: true
  url: https://devops-api.us-south.devops.cloud.ibm.com/v1/messaging/webhook/publish
defaultBaseImageVersion: latest
properties:
- name: DESTINATION
  value: '{{form.pipeline.parameters.destination}}'
  type: text
- name: DOCKER_IMAGE_NAME
  value: '{{form.pipeline.parameters.dockerImageName}}'
  type: text
- name: IBM_CLOUD_API_KEY
  value: '{{form.pipeline.parameters.api-key}}'
  type: secure
- name: DOCKER_USERNAME
  value: 'iamapikey'
  type: text
- name: DOCKER_PASSWORD
  value: '{{form.pipeline.parameters.api-key}}'
  type: secure 
- name: REGISTRY_REGION_ID
  value: '{{form.pipeline.parameters.registry-region}}'
  type: text
- name: INPUT_GIT_BRANCH 
  value: '{{form.pipeline.parameters.INPUT_GIT_BRANCH}}'
  type: text
- name: GIT_REPO 
  value: 'https://github.ibm.com/CEDP-Garage/cedp-garage-pipelines.git'
  type: text
- name: VERSIONS_GIT_BRANCH 
  value: '{{form.pipeline.parameters.VERSIONS_GIT_BRANCH}}'
  type: text
- name: VERDACCIO_URL
  value: '{{form.pipeline.parameters.VERDACCIO_URL}}'
  type: text
- name: VERDACCIO_USER 
  value: '{{form.pipeline.parameters.VERDACCIO_USER}}'
  type: text
- name: VERDACCIO_PASSWORD 
  value: '{{form.pipeline.parameters.VERDACCIO_PASSWORD}}'
  type: secure
- name: ARTIFACTORY_USER
  value: '{{form.pipeline.parameters.ARTIFACTORY_USER}}'
  type: text
- name: ARTIFACTORY_APIKEY 
  value: '{{form.pipeline.parameters.ARTIFACTORY_APIKEY}}'
  type: secure
- name: ARTIFACTORY_URL 
  value: '{{form.pipeline.parameters.ARTIFACTORY_URL}}'
  type: text
- name: ICP_USER 
  value: '{{form.pipeline.parameters.ICP_USER}}'
  type: text
- name: ICP_PASSWORD 
  value: '{{form.pipeline.parameters.ICP_PASSWORD}}'
  type: secure
- name: ICP_NAMESPACE 
  value: '{{form.pipeline.parameters.ICP_NAMESPACE}}'
  type: text
- name: DOMAIN
  value: '{{form.pipeline.parameters.domain}}'
  type: text
- name: IBMCLOUD_HOME 
  value: '/root'
  type: text
- name: KEY_PROTECT_NAME 
  value: '{{form.pipeline.parameters.key-protect-name}}'
  type: text
- name: DEPLOYMENT_TYPE 
  value: '{{form.pipeline.parameters.deployment-type}}'
  type: text 
- name: CLUSTER
  value: '{{form.pipeline.parameters.cluster}}'
  type: text
