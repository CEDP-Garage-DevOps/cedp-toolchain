---
stages:
- name: Versions
  inputs:
  - service: ${GIT_REPO}
    type: git
    branch: '{{form.pipeline.parameters.INPUT_GIT_BRANCH}}'
    dir_name: null
  triggers:
  - type: git
    events: '{"push":false,"pull_request":true,"pull_request_closed":false}'
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: 'Pull'
    type: builder
    artifact_dir: ''
    build_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      env
      ibm-bifrost versions pull

      mv .git git
      
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}  
- name: Plan
  inputs:
  - type: job
    stage: Versions
    job: 'Pull'
    dir_name: null
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: 'Build'
    type: builder
    artifact_dir: ''
    build_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e

      mv git .git
      ibm-bifrost build_plan "${DESTINATION}" diff pr
      mv .git git
      
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}
- name: Unit tests
  inputs:
  - type: job
    stage: Plan
    job: 'Build'
    dir_name: null
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: 'Test'
    type: builder
    artifact_dir: ''
    build_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      export REGION=$(echo $REGISTRY_REGION_ID | cut -f3 -d:)
      export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID

      ibmcloud login -a cloud.ibm.com -r "${REGION}" --apikey ${IBM_CLOUD_API_KEY}

      export MAVEN_OPTS="-Xmx1000m"
      ibm-bifrost build_code test-only
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}
- name: 'Sonar Qube'
  inputs:
  - type: job
    stage: Plan
    job: 'Build'
    dir_name: null
  triggers:
  - type: stage
  permission:
    execute: TOOLCHAIN_ADMINS
  jobs:
  - name: 'Validate'
    type: tester
    artifact_dir: ''
    test_type: customimage
    script: |-
      #********************************************
      #!/bin/bash
      set -x
      set -e
      
      export REGION=$(echo $REGISTRY_REGION_ID | cut -f3 -d:)
      export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
      
      ibmcloud login -a cloud.ibm.com -r "${REGION}" --apikey ${IBM_CLOUD_API_KEY}
      
      sonar-scanner --version
      ibm-bifrost sonar_validate      
      
    namespace: 'NULL'
    docker_image: ${DOCKER_IMAGE_NAME}        
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: http://lms-api/v1/messaging/webhook/publish
properties:
- name: DESTINATION
  value: '{{form.pipeline.parameters.destination}}'
- name: DOCKER_IMAGE_NAME
  value: '{{form.pipeline.parameters.dockerImageName}}'
  type: text
- name: IBM_CLOUD_API_KEY
  value: '{{form.pipeline.parameters.api-key}}'
  type: secure
- name: DOCKER_USERNAME
  value: 'iamapikey'
  type: text
- name: DOCKER_PASSWORD
  value: '{{form.pipeline.parameters.api-key}}'
  type: secure 
- name: SIGNIN_ADDRESS
  value: '{{form.pipeline.parameters.linkpassword}}'
  type: text
- name: EMAIL_ADDRESS
  value: '{{form.pipeline.parameters.email-address}}'
  type: text
- name: S_KEY
  value: '{{form.pipeline.parameters.skey}}'
  type: secure
- name: M_PASS
  value: '{{form.pipeline.parameters.mpass}}'
  type: secure
- name: VAULT
  value: '{{form.pipeline.parameters.vault}}'
  type: text
- name: REGISTRY_REGION_ID
  value: '{{form.pipeline.parameters.registry-region}}'
  type: text
- name: CLUSTER
  value: '{{form.pipeline.parameters.cluster}}'
  type: text
- name: DOMAIN
  value: '{{form.pipeline.parameters.domain}}'
  type: text
- name: EXTERNAL_IP
  value: '{{form.pipeline.parameters.externalIP}}'
  type: text
- name: INPUT_GIT_BRANCH 
  value: '{{form.pipeline.parameters.INPUT_GIT_BRANCH}}'
  type: text
- name: GIT_REPO 
  value: 'https://github.ibm.com/CEDP-Garage/cedp-garage-pipelines.git'
  type: text
